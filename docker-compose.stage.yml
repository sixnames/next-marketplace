version: '3'

services:
  mongo:
    container_name: mongo
    image: mongo
    logging:
      driver: none
    ports:
      - '27017:27017'
    volumes:
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
      - ./data:/data/db
    env_file:
      - .env
  nginx:
    container_name: nginx
    image: nginx:1.15-alpine
    restart: always
#    build:
#      dockerfile: Dockerfile.stage
#      context: ./nginx
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./nginx/stage:/etc/nginx/conf.d
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    depends_on:
      - app
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  api:
    container_name: api
    restart: always
    build:
      dockerfile: Dockerfile.stage
      context: ./api
    volumes:
      - ./api/assets:/app/assets
    env_file:
      - .env
    depends_on:
      - mongo
  app:
    container_name: app
    restart: always
    build:
      dockerfile: Dockerfile.stage
      context: ./app
    stdin_open: true
    env_file:
      - .env
    depends_on:
      - api
